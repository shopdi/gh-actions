name: CI Workflow

on:
  workflow_call:
    inputs:
      workdir:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      dockerhub_username:
        required: true
      dockerhub_token:
        required: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  DOCKER_REPO: ${{ secrets.dockerhub_username }}

jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.DOCKER_REPO }}/${{ github.event.repository.name }}
          tags: |
            # Enabled types
            type=semver,pattern=raw,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=raw,value=stable,enable=${{ github.ref == format('refs/heads/{0}', 'develop') }}
            type=ref,event=tag
            type=sha
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.workdir }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.environment=${{ inputs.environment }}